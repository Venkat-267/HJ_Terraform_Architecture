pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-credentials-id') 
        AWS_SECRET_ACCESS_KEY = credentials('aws-credentials-id')
        TF_VAR_SECRET_PEM = credentials('demo-pem-as') // PEM file stored as secret
        TF_VAR_Admin_PEM = credentials('admin134')
    }

    stages {
        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }

        stage('Terraform Plan') {
            steps {
                sh 'terraform plan -out=tfplan'
            }
        }

        stage('Terraform Apply') {
            steps {
                sh 'terraform apply -auto-approve tfplan'
            }
        }

        stage('Get EC2 IPs') {
            steps {
                script {
                    // Fetch the public IPs of the EC2 instances created by Terraform
                    def outputEc2PublicIp = sh(script: 'terraform output -json ec2_instance_public_ip', returnStdout: true).trim()
                    def jsonSlurper = new groovy.json.JsonSlurper()
                    def ec2Ips = jsonSlurper.parseText(outputEc2PublicIp)
                    env.EC2_PUBLIC_IPS = ec2Ips.collect { it }.join(',')
                }
            }
        }

        stage('Knife Bootstrap') {
            steps {
                script {
                    // Split the IPs into an array for bootstrapping
                    def ec2Ips = env.EC2_PUBLIC_IPS.split(',')

                    for (String publicIp : ec2Ips) {
                        echo "Bootstrapping ${publicIp}"
                        // Use credentials for SSH key and validation key
                        withCredentials([file(credentialsId: 'demo-pem-as', variable: 'SSH_PEM'),
                                        file(credentialsId: 'admin134', variable: 'VALIDATION_KEY')]) {
                            sh """
                                knife bootstrap ${publicIp} \
                                --connection-user ubuntu \
                                --sudo \
                                --ssh-identity-file ${SSH_PEM} \
                                --node-name nodejs-app-server-0 \
                                --run-list "recipe[node-js]" \
                                --server-url "https://ip-172-31-36-31.ap-south-1.compute.internal/organizations/orgs" \
                                --user "admin134" \
                                -k ${VALIDATIOM_KEY} \
                                --bootstrap-version 15.0 \
                                --yes
                            """
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Terraform deployment and Chef bootstrapping successful!'
        }
        failure {
            echo 'Deployment or bootstrapping failed.'
        }
    }
}
